{"version":3,"sources":["Responsive.js","Nav.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["ResponseString","width","style","borderBottom","props","isNight","borderColor","color","nav_root","position","height","padding","display","justifyContent","flexDirection","alignItems","background","boxShadow","zIndex","Res","leftContainer","marginRight","fontFamily","letterSpacing","fontSize","Nav","classes","this","className","Switch","checked","onChange","handleChange","name","Select","labelId","id","value","playerSymbol","handleSelectChange","MenuItem","Component","withStyles","margin","border","textAlign","borderTop","borderRight","borderLeft","result","container","formContainer","topContainer","marginBottom","textTransform","bottomContainer","outline","btn","btnStart","Board","board","i","String","push","arr","includes","onClick","tdClick","isStartPlay","gameEnd","currentPlayer","Button","variant","restart","quit","playerStart","handleChangeplayerStart","type","placeholder","playername","handleInputChange","startPlay","geyStyle","max","a","b","winner","sym","isTie","j","maxmin","symbol","reward","str","bestScore","Infinity","player","score","ai","getMatrixSuccess","App","state","makeInitialBoard","bind","gameStart","makeAImove","setState","pos","tie","x","y","newBoard","setTimeout","Math","round","random","Number","row","e","target","boxSizing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b21c5d.chunk.js","sourcesContent":["function ResponseString(width){\r\n    return `@media screen and (max-width : ${width}px)`;\r\n}\r\n\r\nexport default ResponseString;","import React, { Component } from 'react';\r\n//Import component from material-ui\r\n//Moon icon component\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\n//Bulb icon component\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\nimport Switch from '@material-ui/core/Switch';\r\n//Import for select Component\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Res from \"./Responsive\";\r\n\r\nconst style = {\r\n    \"@global\": {\r\n        '.MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottom: props => props.isNight? '2px solid rgba(255, 255, 255, 0.87)' : '2px solid rgba(0, 0, 0, 0.87)',\r\n        },\r\n        \".MuiInput-underline::before\": {\r\n            borderColor: props => props.isNight ? '#fff' : '#000',\r\n        },\r\n        '.MuiInputBase-root': {\r\n            color :props => props.isNight ? '#fff' : '#000',\r\n        },\r\n        '.MuiSvgIcon-root': {\r\n            color :props => props.isNight ? '#fff' : '#000',\r\n        },\r\n    },\r\n    nav_root: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '60px',\r\n        padding: '0 20px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        background: props => props.isNight ? '#000' : '#fff',\r\n        boxShadow: props => props.isNight ? '0 5px 10px #fff2' : '0 10px 10px #0002',\r\n        zIndex: 1,\r\n        [Res('400')]: {\r\n            padding : '0 10px'\r\n        }\r\n    },\r\n    leftContainer: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        '& h1': {\r\n            marginRight: '20px',\r\n            color: props => props.isNight ? '#fff' : '#000',\r\n            fontFamily: \"Russo One, sans-serif\",\r\n            letterSpacing: '4px',\r\n            [Res('500')]: {\r\n                fontSize : '16px'\r\n            },\r\n            [Res('375')]: {\r\n                fontSize: '14px',\r\n                marginRight : '10px'\r\n            },\r\n            [Res('330')]: {\r\n                fontSize : '12px'\r\n            }\r\n        },\r\n        '& svg': {\r\n            marginRight: '10px',\r\n            color: props => props.isNight ? '#fff' : '#000',\r\n            [Res('375')]: {\r\n                marginRight:'5px'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <nav className={classes.nav_root}>\r\n                <div className={classes.leftContainer}>\r\n                    <h1>Tic Tac Toe</h1>\r\n                    {this.props.isNight ? <NightsStayIcon/> : < WbIncandescentIcon/>}\r\n                    <Switch\r\n                        checked={this.props.isNight}\r\n                        onChange={this.props.handleChange}\r\n                        name=\"isNight\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={this.props.playerSymbol}\r\n                        onChange={this.props.handleSelectChange}\r\n                    >\r\n                        <MenuItem value={'X'}>X(Cross)</MenuItem>\r\n                        <MenuItem value={'O'}>O(Nought)</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Nav);\r\n","import React, { Component } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Res from \"./Responsive\";\r\nimport \"./Board.css\"\r\n\r\nconst style = {\r\n    \"@global\": {\r\n        \".table\": {\r\n            margin: '50px auto 0',\r\n            width: '300px',\r\n            height: '306.5px',\r\n            position: 'relative',\r\n        },\r\n        \"table\": {\r\n            position: 'relative',\r\n            width : '300px',\r\n            height: '300px',\r\n            background:' transparent',\r\n        },\r\n        'table tr': {\r\n            position: 'relative',\r\n            width: '100%',\r\n            height: '100px',\r\n            border: 'none',\r\n        },\r\n        'table tr td': {\r\n            position: 'relative',\r\n            height: '100px',\r\n            width: '100px',\r\n            color: props => props.isNight ? '#fff' : '#000',\r\n            textAlign: 'center',\r\n            fontSize: '40px',\r\n            fontFamily: \"srif\"\r\n        },\r\n        'table tr:nth-child(1) td': {\r\n            borderBottom: props => props.isNight ? \"2px solid #fff\" : '2px solid #000',\r\n        },\r\n        'table tr:nth-child(3) td': {\r\n            borderTop: props => props.isNight ? \"2px solid #fff\" : '2px solid #000',\r\n        },\r\n        'table tr td.right': {\r\n            borderRight: props => props.isNight ? \"2px solid #fff\" : '2px solid #000',\r\n        },\r\n        'table tr td.left': {\r\n            borderLeft: props => props.isNight ? \"2px solid #fff\" : '2px solid #000',\r\n        },\r\n        '::placeholder': {\r\n            color: props => props.isNight ? '#fff7' : '#0007'\r\n        },\r\n        '.MuiButtonBase-root': {\r\n            [Res('480')]: {\r\n                fontSize : '14px'\r\n            },\r\n            [Res('410')]: {\r\n                fontSize : '11px'\r\n            },\r\n            [Res('330')]: {\r\n                fontSize : '10px'\r\n            }\r\n        },\r\n        \".span\" : {\r\n            background: props => props.result === 'Player 1' ? '#32CD32' : '#f00',\r\n            zIndex : '10'\r\n        },\r\n        \".help\": {\r\n            color : props => props.result === 'Player 1' ? '#32CD32' : '#f00',\r\n        }\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: 'calc(100vh - 60px)',\r\n        background: props => props.isNight ? '#000' : '#fff',\r\n        padding: '10px 0'\r\n    },\r\n    formContainer: {\r\n        position: 'relative',\r\n        width: '80%',\r\n        margin :'20px auto 0',\r\n        padding: '25px 10%',\r\n        background: props => props.isNight ? '#fff8' : '#0002',\r\n        textAlign: 'center',\r\n        [Res('1105')]: {\r\n            padding : '20px'\r\n        },\r\n        [Res('901')]: {\r\n            width: '95%'\r\n        },\r\n        [Res('432')]: {\r\n            padding : '20px 10px'\r\n        },\r\n        '& h1': {\r\n            [Res('731')]: {\r\n                fontSize : '16px'\r\n            },\r\n            [Res('432')]: {\r\n                fontSize: '14px',\r\n                marginRight : '10px'\r\n            }\r\n        },\r\n        \r\n    },\r\n    topContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: '10px',\r\n        '& h1': {\r\n            marginRight: '20px',\r\n            textTransform: 'uppercase',\r\n            fontFamily: 'Poppins, sans-serif'\r\n        },\r\n    },\r\n    bottomContainer: {\r\n        position:' relative',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end',\r\n        \"& input\" : {\r\n            background: 'none',\r\n            border: 'none',\r\n            outline: 'none',\r\n            borderBottom: '2px solid #f50057',\r\n            height: '36px',\r\n            padding: '4px 15px',\r\n            marginRight: '20px',\r\n            fontSize: '18px',\r\n            width: '250px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            [Res('480')]: {\r\n                width: 'fit-content',\r\n                fontSize: '16px',\r\n                padding : '4px 8px'\r\n            },\r\n            [Res('410')]: {\r\n                fontSize : '12px'\r\n            },\r\n            [Res('330')]: {\r\n                fontSize : '11px'\r\n            }\r\n        }\r\n    },\r\n    btn: {\r\n        margin : '0 15px'\r\n    },\r\n    btnStart: {\r\n        [Res('330')]: {\r\n            padding : '5px 10px'\r\n        }\r\n    }\r\n}\r\n\r\nclass Board extends Component {\r\n    geyStyle(board) {\r\n        let style = {'position' : 'absolute'}\r\n        for (let i = 0; i < 3; i++){\r\n            if (board[i][0] === board[i][1] && board[i][1] === board[i][2] && board[i][0]!=='') {\r\n                style['height'] = '3px';\r\n                style['width'] = '300px';\r\n                style['left'] = '0px';\r\n                style['top'] = String((i * 100) + 48.5) + 'px';\r\n                style['transformOrigin'] = 'left';\r\n                style['animation'] = 'aniX 2s linear forwards';\r\n                style['transform'] = 'scaleX(0)';\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++){\r\n            if (board[0][i] === board[1][i] && board[1][i] === board[2][i] && board[0][i]!=='') {\r\n                style['width'] = '3px';\r\n                style['height'] = '306.5px';\r\n                style['top'] = '0px';\r\n                style['left'] = String((i * 100) + 48.5) + 'px';\r\n                style['transformOrigin'] = 'top';\r\n                style['animation'] = 'aniY 2s linear forwards';\r\n                style['transform'] = 'scaleY(0)';\r\n            }\r\n        }\r\n        if (board[0][0] === board[1][1] && board[1][1] === board[2][2] && board[0][0] !== '') { \r\n            style['width'] = '3px';\r\n            style['height'] = '425px';\r\n            style['left'] = '0';\r\n            style['transformOrigin'] = 'top';\r\n            style['animation'] = 'aniXY 2s linear forwards';\r\n            style['transform'] = 'scaleY(1) rotate(-44deg)';\r\n        }\r\n        if (board[0][2] === board[1][1] && board[1][1] === board[2][0] && board[1][1] !== '') { \r\n            style['width'] = '3px';\r\n            style['height'] = '0px';\r\n            style['right'] = 0;\r\n            style['transformOrigin'] = 'top';\r\n            style['animation'] = 'aniXY 2s linear forwards';\r\n            style['transform'] = 'scaleY(1) rotate(44deg)';\r\n        }\r\n        return style;\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        let board = [];\r\n        for (let i = 0; i < 3; i++){\r\n            board.push(\r\n                <tr key={i}>\r\n                    <td\r\n                        className={`right ${this.props.arr.includes(`${i}-0`) && 'help'}`}\r\n                        key={`${i}-0`}\r\n                        onClick={() => this.props.tdClick(`${i}-0`)}\r\n                    >\r\n                        {this.props.board[i][0]}\r\n                    </td>\r\n\r\n                    <td\r\n                        className={`con ${this.props.arr.includes(`${i}-1`) && 'help'}`}\r\n                        key={`${i}-1`}\r\n                        onClick={() => this.props.tdClick(`${i}-1`)}\r\n                    >\r\n                        {this.props.board[i][1]}\r\n                    </td>\r\n                    <td\r\n                        className={`left ${this.props.arr.includes(`${i}-2`) && 'help'}`}\r\n                        key={`${i}-2`}\r\n                        onClick={() => this.props.tdClick(`${i}-2`)}\r\n                    >\r\n                        {this.props.board[i][2]}\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes.container}>\r\n                {this.props.isStartPlay ?\r\n                    <div className={classes.formContainer}>\r\n                        {this.props.gameEnd\r\n                            ?\r\n                            this.props.result === 'tie'\r\n                                ?\r\n                                <h1 style={{marginBottom: '10px'}}>Match Tie !!</h1>\r\n                                : \r\n                                <h1 style={{marginBottom: '10px'}}>{ this.props.result } is the winner of the Game!</h1>\r\n                            :\r\n                            <h1 style={{marginBottom: '10px'}}>{this.props.currentPlayer} : IT's YOUR TURN</h1>\r\n                        }\r\n                        <div>\r\n                            <Button style={{fontFamily: 'Poppins, sans-serif'}} variant=\"contained\" color=\"secondary\" className={classes.btn} onClick={this.props.restart}>RESTART</Button>\r\n                            {\r\n                                this.props.gameEnd\r\n                                    ?\r\n                                    null\r\n                                    :\r\n                                    <Button style={{fontFamily: 'Poppins, sans-serif'}} variant=\"contained\" color=\"primary\" className={classes.btn} onClick={this.props.quit}>QUIT!</Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.topContainer}>\r\n                            <h1>Do you want to give first move?</h1>\r\n                            <Switch\r\n                                checked={this.props.playerStart}\r\n                                onChange={this.props.handleChangeplayerStart}\r\n                                name=\"playerStart\"\r\n                            />\r\n                        </div>\r\n                        <div className={classes.bottomContainer}>\r\n                            <input type=\"text\"\r\n                                placeholder=\"Please enter your name \"\r\n                                value={this.props.playername}\r\n                                onChange={this.props.handleInputChange}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={this.props.startPlay}\r\n                                className={classes.btnStart}\r\n                                style={{fontFamily: 'Poppins, sans-serif'}}\r\n                            >\r\n                                Start Play!\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.props.isStartPlay\r\n                    ?\r\n                        <div className='table'>\r\n                            {\r\n                                (this.props.result !== 'tie' && this.props.result !== '')\r\n                                ?\r\n                                <span className={ \"span spanActive\" } style={this.geyStyle(this.props.board)}></span>\r\n                                :\r\n                                null\r\n                            }\r\n                            <table>\r\n                                <tbody>\r\n                                    {board}\r\n                                </tbody>\r\n                            </table> \r\n                        </div>\r\n                    :\r\n                        null\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(Board);","import React, { Component } from \"react\";\n//Import Nav Component\nimport Nav from \"./Nav\";\n//Import Board Component\nimport Board from \"./Board\";\nimport { withStyles } from \"@material-ui/styles\";\n\nfunction max(a, b) {\n    if (a > b) return a;\n    return b;\n}\nfunction min(a, b) {\n    if (a < b) return a;\n    return b;\n}\n\nfunction winner(board , sym) {\n    for (let i = 0; i < 3; i++){\n        if ((board[i][0] === sym) && (board[i][1] === sym) && (board[i][2] === sym)) return true;\n        if ((board[0][i] === sym) && (board[1][i] === sym) && (board[2][i] === sym)) return true;\n    }\n    if ((board[0][0] === sym) && (board[1][1] === sym) && (board[2][2] === sym)) return true;\n    if ((board[0][2] === sym) && (board[1][1] === sym) && (board[2][0] === sym)) return true;\n    return false;\n}\nfunction isTie(board) {\n    for (let i = 0; i < 3; i++){\n        for (let j = 0; j < 3; j++){\n            if(board[i][j] === '') return false;\n        }\n    }\n    return true;\n}\n\n/**\n * score = maxmin(\n        board,\n        { ai : sym, player: this.state.playerSymbol },\n        { ai : 1 , player : -1 , tie : 0},\n        'max'\n    )\n */\nfunction maxmin(board, symbol, reward, str) {\n    if( isTie(board)) return 0;\n    if (str === 'max') {\n        let bestScore = +Infinity;\n        for (let i = 0; i < 3; i++){\n            for (let j = 0; j < 3; j++){\n                if (board[i][j] === '') {\n                    board[i][j] = symbol.player;\n                    if (winner(board, symbol.player)) {\n                        board[i][j] = ''\n                        return -1;\n                    }\n                    let score = maxmin(board, symbol, reward, 'min');\n                    bestScore = min(score, bestScore);\n                    board[i][j] = ''\n                }\n            }\n        }\n        return bestScore;\n    } else {\n        let bestScore = -Infinity;\n        for (let i = 0; i < 3; i++){\n            for (let j = 0; j < 3; j++){\n                if (board[i][j] === '') {\n                    board[i][j] = symbol.ai;\n                    if (winner(board, symbol.ai)) {\n                        board[i][j] = ''\n                        return 1;\n                    }\n                    let score = maxmin(board, symbol, reward, 'min');\n                    bestScore = max(score, bestScore);\n                    board[i][j] = ''\n                }\n            }\n        }\n        return bestScore;\n    }\n}\n\nfunction getMatrixSuccess(board) {\n    for (let i = 0; i < 3; i++){\n        if (board[i][0] === board[i][1] && board[i][1] === board[i][2] && board[i][0] !== '')\n            return [`${i}-0`, `${i}-1`, `${i}-2`];\n        if ((board[0][i] === board[1][i]) && (board[1][i] === board[2][i]) && board[0][i] !== '')\n            return [`0-${i}`, `1-${i}`, `2-${i}`];\n    }\n    if (board[0][0] === board[1][1] && board[1][1] === board[2][2] && board[0][0] !== '')\n        return ['0-0', '1-1', '2-2'];\n    if (board[0][2] === board[1][1] && board[1][1] === board[2][0] && board[1][1] !== '')\n        return ['0-2' , '1-1' , '2-0']\n}\n\nconst style = {\n    \"@global\": {\n        \"*\": {\n            padding: 0,\n            margin: 0,\n            boxSizing: 'border-box'\n        }\n    }\n}\n\nclass App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNight: true,                  // Determine theme of the game\n            playerSymbol: 'X',              //Player symbol -> X / O\n            board: this.makeInitialBoard(), // this is the board for the game!\n            isStartPlay: false,              // it is used to determine whether play start or not ?\n            playername: '',         //Player name , default player1 , but initialize with -> ''\n            playerStart: false,              // To determine whether player Starts the Game or AI\n            gameEnd : false,\n            result: '',\n            currentPlayer: '',\n            arr : []\n        }\n        this.handleChange            = this.handleChange.bind(this);\n        this.handleSelectChange      = this.handleSelectChange.bind(this);\n        this.handleInputChange       = this.handleInputChange.bind(this);\n        this.handleChangeplayerStart = this.handleChangeplayerStart.bind(this);\n        this.startPlay               = this.startPlay.bind(this);\n        this.tdClick                 = this.tdClick.bind(this);\n        this.gameStart               = this.gameStart.bind(this);\n        this.makeAImove              = this.makeAImove.bind(this);\n        this.restart                 = this.restart.bind(this);\n        this.quit                    = this.quit.bind(this);\n    }\n    quit() {\n        this.setState({\n            gameEnd : true,\n            result : 'AI PLAYER'\n        })\n    }\n    restart() {\n        this.setState({                  // Determine theme of the game\n            playerSymbol: 'X',              //Player symbol -> X / O\n            board: this.makeInitialBoard(), // this is the board for the game!\n            isStartPlay: false,             // it is used to determine whether play start or not ?\n            playername: '',                 //Player name , default player1 , but initialize with -> ''\n            playerStart: false,              // To determine whether player Starts the Game or AI\n            gameEnd : false,\n            result: '',\n            arr : []\n        })\n    }\n    makeAImove() {\n        //console.log(\"COME2\");\n        //console.log(this.state.playerStart, this.state.result, this.state.gameEnd);\n        if (this.state.playerStart || this.state.result !== '' || this.state.gameEnd) return;\n        //console.log(\"COME3\");\n        /**\n         * randomize algo for tic tac toe\n        let x, y;\n        do {\n            x = Math.floor(Math.random() * 3);\n            y = Math.floor(Math.random() * 3);\n        } while (this.state.board[x][y] !== '');\n         */\n        let board = this.state.board;\n        let sym , score , pos , bestScore = -Infinity;\n        if (this.state.playerSymbol === 'X') sym = 'O';\n        else sym = 'X';\n        for (let i = 0; i < 3; i++){\n            for (let j = 0; j < 3; j++){\n                if (board[i][j] === '') {\n                    board[i][j] = sym;\n                    if (winner(board, sym))\n                    {\n                        score = 1;\n                    }\n                    else {\n                        score = maxmin(\n                            board,\n                            { ai: sym, player: this.state.playerSymbol },\n                            { ai: 1, player: -1, tie: 0 },\n                            'max'\n                        )\n                    }\n                    if (score > bestScore) {\n                        bestScore = score;\n                        pos = {x : i , y : j}\n                    }\n                    board[i][j] = '';\n                }\n            }\n        }\n        //console.log(pos);\n        //console.log(board)\n        //console.log(x, y);\n        let newBoard = this.state.board;\n        newBoard[pos.x][pos.y] = sym;\n        this.setState({\n            board: newBoard,\n            currentPlayer : this.state.playername,\n            playerStart: false\n        }, () => {\n                let ret = winner(this.state.board , sym);\n                if (ret) {\n                    this.setState({\n                        gameEnd: true,\n                        result : 'AI player'\n                    }, () => {\n                            let arr = getMatrixSuccess(this.state.board);\n                            this.setState({\n                                arr : arr\n                            })\n                        }\n                    )\n                } else {\n                    if (isTie(this.state.board)) {\n                        this.setState({\n                            gameEnd: true,\n                            result : 'tie'\n                        })\n                    } else {\n                        this.setState({\n                            playerStart : true\n                        })\n                    }\n                }\n        })\n    }\n    \n    gameStart() {\n        //console.log(\"GAME START!\")\n        if (this.state.playerStart === false) {\n            setTimeout(()  =>  this.makeAImove() , Math.round(Math.random() * 1000))\n        }\n    }\n    \n    tdClick(pos) {\n        if (!this.state.playerStart || this.state.result!=='' || this.state.gameEnd) return;\n        let x = Number(pos[0]);\n        let y = Number(pos[2]);\n        if (this.state.board[x][y] !== '') return;\n        let newBoard = this.state.board;\n        newBoard[x][y] = this.state.playerSymbol;\n        this.setState({\n            board: newBoard,\n            currentPlayer : 'AI Player',\n            playerStart : false\n        }, () => {\n                let ret = winner(this.state.board , this.state.playerSymbol);\n                if (ret) {\n                    this.setState({\n                        result: this.state.playername,\n                        gameEnd : true\n                    }, () => {\n                            let arr = getMatrixSuccess(this.state.board);\n                            this.setState({\n                                arr : arr\n                            })\n                        }\n                    )\n                } else {\n                    if (isTie(this.state.board)) {\n                        this.setState({\n                            result: 'tie',\n                            gameEnd:true\n                        })\n                    } else {\n                        setTimeout(()  =>  this.makeAImove() , Math.round(Math.random() * 1000))\n                    }\n                }\n        })\n        //console.log(\"COME1\");\n        \n    }\n    makeInitialBoard() {\n        let board = [];\n        for (let i = 0; i < 3; i++){\n            let row = [];\n            for (let j = 0; j < 3; j++){\n                row.push('');\n            }\n            board.push(row);\n        }\n        return board;\n    }\n    handleChange() {\n        this.setState({\n            isNight : !this.state.isNight\n        })\n    }\n    handleChangeplayerStart(e) {\n        this.setState({\n            playerStart : !this.state.playerStart\n        })\n    }\n    handleSelectChange(e) {\n        if (this.state.isStartPlay) return;\n        this.setState({\n            playerSymbol : e.target.value\n        })\n    }\n    handleInputChange(e) {\n        this.setState({\n            playername : e.target.value\n        })\n    }\n    startPlay() {\n        if (this.state.playername === '') {\n            this.setState({\n                isStartPlay: true,\n                playername: 'Player 1',\n                currentPlayer : this.state.playerStart ? 'Player 1' : 'AI PLAYER!'\n            } , this.gameStart)\n        } else {\n            this.setState({\n                isStartPlay: true,\n                currentPlayer : this.state.playerStart ? this.state.playername : 'AI PLAYER!'\n            } , this.gameStart)\n        }\n        \n    }\n    render() {\n        //const { classes } = this.props;\n        return (\n            <div>\n                <Nav\n                    handleSelectChange={this.handleSelectChange}\n                    handleChange={this.handleChange}\n                    playerSymbol={this.state.playerSymbol}\n                    isNight={this.state.isNight}\n                />\n\n                <Board\n                    isNight={this.state.isNight}\n                    playername={this.state.playername}\n                    handleChangeplayerStart={this.handleChangeplayerStart}\n                    handleInputChange={this.handleInputChange}\n                    playerStart={this.state.playerStart}\n                    isStartPlay={this.state.isStartPlay}\n                    currentPlayer={this.state.currentPlayer}\n                    startPlay={this.startPlay}\n                    board={this.state.board}\n                    tdClick={this.tdClick}\n                    gameEnd={this.state.gameEnd}\n                    result={this.state.result}\n                    restart={this.restart}\n                    quit={this.quit}\n                    arr = {this.state.arr}\n                />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(style)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}